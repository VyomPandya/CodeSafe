name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# Set permissions
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js 🔧
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies 📦
        run: npm ci

      - name: Get Repository Info 📝
        id: repo-info
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_ENV
          echo "REPO_OWNER=$(echo ${{ github.repository }} | cut -d '/' -f 1)" >> $GITHUB_ENV
          echo "Repository name: ${{ env.REPO_NAME }}"
          echo "Repository owner: ${{ env.REPO_OWNER }}"

      - name: Debug Environment Variables 🔍
        run: |
          echo "SUPABASE_URL exists: ${{ secrets.SUPABASE_URL != '' }}"
          echo "SUPABASE_ANON_KEY exists: ${{ secrets.SUPABASE_ANON_KEY != '' }}"
          echo "OPENROUTER_API_KEY exists: ${{ secrets.OPENROUTER_API_KEY != '' }}"
          echo "GitHub Pages URL will be: https://${{ env.REPO_OWNER }}.github.io/${{ env.REPO_NAME }}"

      - name: Generate Environment Config 🔧
        run: |
          # Create env-config.js with proper JSON escaping
          cat > env-config.js << EOF
          window._env_ = {
            "SUPABASE_URL": "${{ secrets.SUPABASE_URL || '' }}",
            "SUPABASE_ANON_KEY": "${{ secrets.SUPABASE_ANON_KEY || '' }}",
            "OPENROUTER_API_KEY": "${{ secrets.OPENROUTER_API_KEY || '' }}"
          };
          
          // Log environment loading for debugging
          console.log("env-config.js loaded at: " + new Date().toISOString());
          if (window._env_.SUPABASE_URL) console.log("Supabase URL available");
          if (window._env_.SUPABASE_ANON_KEY) console.log("Supabase Anon Key available");
          EOF
          
          # Log the file was created (without sensitive contents)
          echo "Created env-config.js file"
          
          # Check if variables are present (without showing values)
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
            echo "WARNING: SUPABASE_URL is empty in GitHub secrets!"
          fi
          if [ -z "${{ secrets.SUPABASE_ANON_KEY }}" ]; then
            echo "WARNING: SUPABASE_ANON_KEY is empty in GitHub secrets!"
          fi
          
          # For debugging only - view contents of env-config.js without sensitive values
          sed 's/"SUPABASE_URL": ".*"/"SUPABASE_URL": "[REDACTED]"/g' env-config.js | 
          sed 's/"SUPABASE_ANON_KEY": ".*"/"SUPABASE_ANON_KEY": "[REDACTED]"/g' | 
          sed 's/"OPENROUTER_API_KEY": ".*"/"OPENROUTER_API_KEY": "[REDACTED]"/g'
      
      - name: Build 🔨
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          VITE_OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          # Add GitHub Pages URL for proper base path configuration
          PUBLIC_URL: https://${{ env.REPO_OWNER }}.github.io/${{ env.REPO_NAME }}
          VITE_PUBLIC_PATH: /${{ env.REPO_NAME }}/

      - name: Update index.html 🔄
        run: |
          # Add the redirect script to the index.html file
          sed -i 's|<head>|<head>\n    <script src="env-config.js"></script>\n    <script src="redirect.js"></script>|' dist/index.html
          echo "Updated index.html to include redirect script"
          
      - name: Setup SPA Routing 🧭
        run: |
          # Create a custom 404.html for SPA routing on GitHub Pages
          cat > dist/404.html << EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Redirecting...</title>
            <script src="/${{ env.REPO_NAME }}/env-config.js"></script>
            <script src="/${{ env.REPO_NAME }}/redirect.js"></script>
            <script>
              // Fallback redirect if the redirect.js script doesn't work
              setTimeout(function() {
                window.location.replace(window.location.origin + '/${{ env.REPO_NAME }}/');
              }, 3000);
            </script>
          </head>
          <body>
            <div style="text-align:center; padding: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;">
              <h1>Redirecting...</h1>
              <p>If you are not redirected automatically, please <a href="/${{ env.REPO_NAME }}/">click here</a>.</p>
            </div>
          </body>
          </html>
          EOF
          echo "Created custom 404.html for SPA routing"

      - name: Generate Health Check File 📋
        run: |
          # Create a health check file to verify deployment
          cat > dist/health.json << EOF
          {
            "status": "ok",
            "deployedAt": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "repository": "${{ github.repository }}",
            "buildId": "${{ github.run_id }}",
            "env": {
              "supabaseUrl": "${{ secrets.SUPABASE_URL != '' }}",
              "supabaseKey": "${{ secrets.SUPABASE_ANON_KEY != '' }}",
              "openrouterKey": "${{ secrets.OPENROUTER_API_KEY != '' }}"
            }
          }
          EOF
          echo "Created health.json file"

      - name: Copy Files to Dist 📋
        run: |
          # Copy env-config.js to the dist folder
          cp env-config.js dist/
          echo "Copied env-config.js to dist/ folder"
          
          # Copy the environment variables test page
          cp public/env-test.html dist/
          echo "Copied env-test.html to dist/ folder"
          
          # Copy the redirect handler
          cp public/redirect.js dist/
          echo "Copied redirect.js to dist/ folder"
          
          # Verify files exist in dist folder
          if [ -f "dist/env-config.js" ]; then
            echo "✅ env-config.js exists in dist folder"
          else
            echo "❌ env-config.js is missing from dist folder"
            exit 1
          fi
          
          if [ -f "dist/env-test.html" ]; then
            echo "✅ env-test.html exists in dist folder"
          else
            echo "❌ env-test.html is missing from dist folder"
            exit 1
          fi
          
          if [ -f "dist/redirect.js" ]; then
            echo "✅ redirect.js exists in dist folder"
          else
            echo "❌ redirect.js is missing from dist folder"
            exit 1
          fi

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages 